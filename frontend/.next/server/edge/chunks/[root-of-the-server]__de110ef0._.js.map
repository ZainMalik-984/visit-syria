{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["// middleware.ts\r\nimport { NextResponse } from 'next/server';\r\nimport type { NextRequest } from 'next/server';\r\nimport createMiddleware from 'next-intl/middleware';\r\n\r\nconst intlMiddleware = createMiddleware({\r\n  locales: ['en', 'fr'], // Your supported locales\r\n  defaultLocale: 'en', // Fallback if no locale detected\r\n  localePrefix: 'always', // Always prefix routes with locale (e.g., /en/)\r\n});\r\n\r\nexport default function middleware(request: NextRequest) {\r\n  // Get locale from path, headers, or cookie\r\n  const pathname = request.nextUrl.pathname;\r\n  const locale = pathname.split('/')[1]; // Extract from /en/...\r\n\r\n  if (!locale) {\r\n    // Redirect to default locale if missing\r\n    return NextResponse.redirect(new URL(`/en${pathname}`, request.url));\r\n  }\r\n\r\n  return intlMiddleware(request);\r\n}\r\n\r\nexport const config = {\r\n  matcher: ['/((?!api|_next|.*\\\\..*).*)'], // Apply to all routes except API/static\r\n};\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAChB;AAAA;AAEA;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,8LAAA,CAAA,UAAgB,AAAD,EAAE;IACtC,SAAS;QAAC;QAAM;KAAK;IACrB,eAAe;IACf,cAAc;AAChB;AAEe,SAAS,WAAW,OAAoB;IACrD,2CAA2C;IAC3C,MAAM,WAAW,QAAQ,OAAO,CAAC,QAAQ;IACzC,MAAM,SAAS,SAAS,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,uBAAuB;IAE9D,IAAI,CAAC,QAAQ;QACX,wCAAwC;QACxC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,UAAU,EAAE,QAAQ,GAAG;IACpE;IAEA,OAAO,eAAe;AACxB;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;KAA6B;AACzC"}}]
}